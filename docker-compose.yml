version: '3.8'
services:
  # PHP Service
  php:
    build:
      context: .
      args:
        - APP_ENV=${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}      # Updated to match the MySQL container name
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}      # Fetching DB_PORT from environment variable
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - 8000:8000
    depends_on:
      - database
      - redis
    entrypoint: ["/var/www/docker/entrypoint.sh"]

  # Database Server
  database:
    image: mysql:8.0
    container_name: database
    ports:
      - "${DB_PORT}:${DB_PORT}"  # Dynamically using the DB_PORT variable for port mapping
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}  # Used the environment variable here
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_PORT: ${DB_PORT}
      MYSQL_ALLOW_EMPTY_PASSWORD: "false"
    volumes:
      - db-data:/var/lib/mysql

  # Redis Server
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - 6379:6379

volumes:
  db-data:
